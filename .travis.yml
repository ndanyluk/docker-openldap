sudo: required

language: generic

services:
  - docker

env:
  global:
    - qemu_version=4.0.0
    - target_version=1.2.4
  matrix:
    - target_arch=amd64 qemu_arch=x86_64
    - target_arch=armv7 qemu_arch=arm
#    - target_arch=armv6 qemu_arch=arm <------ NOT SUPPORTED BY DEBIAN STRETCH BASE IMAGE
    - target_arch=arm64 qemu_arch=aarch64

before_install:
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y install docker-ce
  - mkdir $HOME/.docker
  - 'echo "{" > $HOME/.docker/config.json'
  - 'echo "  \"experimental\": \"enabled\"" >> $HOME/.docker/config.json'
  - 'echo "}" >> $HOME/.docker/config.json'
  - sudo service docker restart
  - git clone https://github.com/sstephenson/bats.git
  - cd bats
  - sudo ./install.sh /usr/local
  - cd ..

install:
  - docker run --rm --privileged multiarch/qemu-user-static:register
  - curl -sLO https://github.com/multiarch/qemu-user-static/releases/download/v${qemu_version}/qemu-${qemu_arch}-static.tar.gz;
  - tar -xzvf qemu-${qemu_arch}-static.tar.gz;
  - mv qemu-${qemu_arch}-static image/
  - make build ARCH=${target_arch}

script:
  - docker run -d --name test_image ndanyluk/openldap-${target_arch}:${target_version} sleep 10
  - sleep 5
  - sudo docker ps | grep -q test_image

after_success:
  - if [ -z "$DOCKER_USER" ]; then
      echo "PR build, skipping Docker Hub push";
    else
      docker login -u "$DOCKER_USER" -p "$DOCKER_PASS";
      make tag-latest push push-latest ARCH=${target_arch}
    fi

jobs:
  include:
    - stage: deploy
      install: skip
      script: skip
      after_success:
        - if [ -z "$DOCKER_USER" ]; then
            echo "PR build, skipping Docker Hub push";
          else
            docker login -u "$DOCKER_USER" -p "$DOCKER_PASS";
            docker manifest create ndanyluk/openldap:${target_version} ndanyluk/openldap-armv7:${target_version} ndanyluk/openldap-arm64:${target_version} ndanyluk/openldap-amd64:${target_version};
            docker manifest create ndanyluk/openldap:latest ndanyluk/openldap-armv7:latest ndanyluk/openldap-amd64:latest ndanyluk/openldap-arm64:latest;
            docker manifest push ndanyluk/openldap:${target_version};
            docker manifest push ndanyluk/openldap:latest;
          fi
